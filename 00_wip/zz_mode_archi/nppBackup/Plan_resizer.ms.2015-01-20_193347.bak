
--  create system
fn createScalerSys =
(
	local startPt, endPt, scaler

	startPt = getnodebyname  "startPoint"
	if  startPt == undefined do startPt = point name: "startPoint" wirecolor: red size: 20 box: true cross: false

	endPt = getnodebyname  "endPoint"
	if  endPt == undefined do endPt = point name: "endPoint" wirecolor: red parent: startPt size: 15 box: false cross: true pos: [10,0,0]
		
	scaler = getnodebyname  "scaler"
	if  scaler == undefined do scaler = point name: "scaler" wirecolor: yellow parent: startPt size: 15 box: true cross: true
		
	return #(startPt, endPt, scaler)
)



fn createRefSys =
(
	local startSize, endSize
	
	startSize = getnodebyname  "startSize"
	if  startSize == undefined do startSize = point name: "startSize" wirecolor: green size: 15 box: true cross: true

	endSize = getnodebyname  "endSize"
	if  endSize == undefined do endSize = point name: "endSize" wirecolor: green parent: startSize size: 15 box: false cross: true pos: [10,0,0]
		
	return #(startSize, endSize)
)




-- startPt = $Point001
-- endPt = $Point002

-- calculate ratio
/*
reelDist = float( distance startPt endPt)
aimedDist =  float(distance startSize endSize)
ratio = aimedDist/reelDist

-- apply ratio on selection
	-- parent selection on scaler
	-- apply scale
	-- inparent selection
	-- reset scale
sel = $selection

for s in sel do
(
	s.parent = scaler
	scaler.scale = scaler.scale*ratio
	s.parent = undefined
	scaler.scale = [1,1,1]
)

startPt.pos = $.pivot
*/

rollout planResizerRLT "blueprint resizer" width: 250
(
-- 	vars
	local scalerArray = #()
	local refArray = #()

-- 	fonctions
-- 	UI

	-- pick blueprint resizer
			-- create resizer
	group "Scaler:"
	(
		button createScaler_bt "create scaler" across:2
		button selScaler_bt "select scaler"

		button parentScaler_bt "parent map" across:2
		button centerScaler_bt "center map" 

		edittext mapToResize_et "map to resize:" readOnly: true
		edittext distResize_et "distance:" readOnly: true
				
		button refreshDistRef_pb "refresh distance"
	)
	
	group "Reference:"
	(

		-- reference selection (radio button)
		radiobuttons sizeRef_rb labels:#("numeric", "visual")
	)
			-- numeric
			-- repere
		--  enter precious size
	
	group "visual reference:"
	(
		button createSizeRef_bt "create size reference" across: 2
		button selSize_bt "select size reference"
		
		button parentRef_bt "parent map" across:2
		button centerRef_bt "center map" 
		
		edittext mapAsRef_et "map as ref:" readOnly: true
		edittext distRef_et "distance:" readOnly: true
		
		button refreshDistRef_pb "refresh distance"
			
	)
	
	group "Numeric:"
	(
		spinner size_sp "size:" range: [0,100000,0]  type: #worldunits 
		-- display size reference	
	)
	
	
	-- rescale points
	button rescale_bt "resize map"

-- 	actions
	
	on createScaler_bt pressed do
	(
		scalerArray = createScalerSys()
		startPt = scalerArray[1]
		endPt = scalerArray[2]
		scaler = scalerArray[3]
		print scalerArray
	)

	on selScaler_bt pressed do
	(
		select scalerArray
	)
	
	on refre
	
-- 	
-- 	-- resize with a dimension, resize with a size reference.

-- 	-- create visual resizer
	on createSizeRef_bt pressed do
	(
		refArray = createRefSys()
		startSize = refArray[1]
		endSize = refArray[2]
		print refArray
	)
	
	on selSize_bt pressed do
	(
		select refArray
	)
	
-- 	-- resize!
	
)

theNewFloater = newRolloutFloater "Blueprint Resizer" 300 400
addRollout planResizerRLT theNewFloater

createdialog planResizerRLT style: #(#style_resizing,#style_titlebar, #style_border, #style_sysmenu,#style_minimizebox, #style_maximizebox )






